syntax = "proto3";
package protocol;
option go_package = "github.com/orbs-network/orbs-spec/types/go/protocol";

import "primitives/crypto.proto";
import "primitives/protocol.proto";

message Argument {
    oneof type {
        uint32 uint32_value = 2;
        uint64 uint64_value = 3;
        string string_value = 4;
        bytes bytes_value = 5;
    }
}

message ArgumentArray {
    repeated Argument arguments = 1;
}

message StateRecord {
    bytes key = 1;
    bytes value = 2;
}

message ContractStateDiff {
    primitives.contract_name contract_name = 1;
    repeated StateRecord state_diffs = 2;
}

message Event {
    primitives.contract_name contract_name = 1;
    primitives.event_name event_name = 2;
    primitives.packed_argument_array output_argument_array = 3;
}

message EventsArray {
    repeated Event events = 1;
}


message OffChainRecord {
    bytes key = 1;
    bytes value = 2;
}

message OffChainData {
    repeated OffChainRecord off_chain_record = 1;
}


enum ExecutionAccessScope {
    ACCESS_SCOPE_RESERVED = 0;
    ACCESS_SCOPE_READ_ONLY = 1;
    ACCESS_SCOPE_READ_WRITE = 2;
}

enum ExecutionPermissionScope {
    PERMISSION_SCOPE_RESERVED = 0;
    PERMISSION_SCOPE_SYSTEM = 1;
    PERMISSION_SCOPE_SERVICE = 2;
}

enum ConsensusRole {
    CONSENSUS_ROLE_RESERVED = 0;
    CONSENSUS_ROLE_PROPOSER = 1;
    CONSENSUS_ROLE_VALIDATOR = 2;
}

enum ProcessorType {
    PROCESSOR_TYPE_RESERVED = 0;
    PROCESSOR_TYPE_NATIVE = 1;
    PROCESSOR_TYPE_JAVASCRIPT = 2;
}

enum CrosschainConnectorType {
    CROSSCHAIN_CONNECTOR_TYPE_RESERVED = 0;
    CROSSCHAIN_CONNECTOR_TYPE_ETHEREUM = 1;
    CROSSCHAIN_CONNECTOR_TYPE_MANAGEMENT = 2;
}
