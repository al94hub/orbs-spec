syntax = "proto3";
package consensus;
option go_package = "github.com/orbs-network/orbs-spec/types/go/protocol/consensus";

import "../../primitives/crypto.proto";
import "../../primitives/protocol.proto";

enum BenchmarkConsensusMessageType {
    BENCHMARK_CONSENSUS_RESERVED = 0;
    BENCHMARK_CONSENSUS_COMMIT = 1;
    BENCHMARK_CONSENSUS_COMMITTED = 2;
}

// this was updated to resemble lean helix block proof to aid with Solidity verifications
message BenchmarkConsensusBlockProof {
    BenchmarkConsensusBlockRef block_ref = 1;
    repeated BenchmarkConsensusSenderSignature nodes = 2; // signs on BlockRef
    bytes placeholder = 3;
}

message BenchmarkConsensusSenderSignature {
    primitives.node_address sender_node_address = 1;
    primitives.ecdsa_secp256k1_sig signature = 2;
}

message BenchmarkConsensusBlockRef {
    BenchmarkConsensusPlaceholder placeholder_type = 1;
    primitives.block_height block_height = 2;
    uint64 placeholder_view = 3;
    primitives.sha256 block_hash = 4;
}

enum BenchmarkConsensusPlaceholder {
    BENCHMARK_CONSENSUS_INVALID_0 = 0;
    BENCHMARK_CONSENSUS_INVALID_1 = 1;
    BENCHMARK_CONSENSUS_INVALID_2 = 2;
    BENCHMARK_CONSENSUS_VALID = 3;
}