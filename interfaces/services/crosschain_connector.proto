syntax = "proto3";
package services;
option go_package = "github.com/orbs-network/orbs-spec/types/go/services";

import "primitives/protocol.proto";

option serialize_messages = false;

service CrosschainConnector {
    // called by VirtualMachine
    rpc EthereumCallContract (EthereumCallContractInput) returns (EthereumCallContractOutput);
    rpc EthereumGetTransactionLogs (EthereumGetTransactionLogsInput) returns (EthereumGetTransactionLogsOutput);
    rpc EthereumGetBlockNumber (EthereumGetBlockNumberInput) returns (EthereumGetBlockNumberOutput);
    rpc EthereumGetBlockTime (EthereumGetBlockTimeInput) returns (EthereumGetBlockTimeOutput);
    rpc EthereumGetBlockTimeByNumber (EthereumGetBlockTimeByNumberInput) returns (EthereumGetBlockTimeByNumberOutput);
    rpc EthereumGetBlockNumberByTime (EthereumGetBlockNumberByTimeInput) returns (EthereumGetBlockNumberByTimeOutput);
    rpc EthereumFilterLogs (EthereumFilterLogsInput) returns (EthereumFilterLogsOutput);
}

message EthereumCallContractInput {
    primitives.timestamp_nano reference_timestamp = 1;
    uint64 ethereum_block_number = 2; // 0 for recent
    string ethereum_contract_address = 3;
    string ethereum_function_name = 4;
    string ethereum_json_abi = 5;
    bytes ethereum_abi_packed_input_arguments = 6;
}

message EthereumCallContractOutput {
    bytes ethereum_abi_packed_output = 1;
}

message EthereumGetTransactionLogsInput {
    primitives.timestamp_nano reference_timestamp = 1;
    string ethereum_contract_address = 2;
    string ethereum_event_name = 3;
    string ethereum_json_abi = 4;
    string ethereum_txhash = 5;
}

message EthereumGetTransactionLogsOutput {
    repeated bytes ethereum_abi_packed_outputs = 1;
    uint64 ethereum_block_number = 2;
    uint32 ethereum_txindex = 3;
}

message EthereumGetBlockNumberInput {
    primitives.timestamp_nano reference_timestamp = 1;
}

message EthereumGetBlockNumberOutput {
    uint64 ethereum_block_number = 1;
}

message EthereumGetBlockTimeByNumberInput {
    primitives.timestamp_nano reference_timestamp = 1;
    uint64 ethereum_block_number = 2;
}

message EthereumGetBlockTimeByNumberOutput {
    primitives.timestamp_nano ethereum_timestamp = 1;
}

message EthereumGetBlockTimeInput {
    primitives.timestamp_nano reference_timestamp = 1;
}

message EthereumGetBlockTimeOutput {
    primitives.timestamp_nano ethereum_timestamp = 1;
}

message EthereumGetBlockNumberByTimeInput {
    primitives.timestamp_nano reference_timestamp = 1;
    primitives.timestamp_nano ethereum_timestamp = 2;
}

message EthereumGetBlockNumberByTimeOutput {
    uint64 ethereum_block_number = 1;
}

message EthereumFilterLogsInput {
    primitives.timestamp_nano reference_timestamp = 1;
    string ethereum_contract_address = 2;
    string ethereum_event_name = 3;
    string ethereum_json_abi = 4;
    uint64 from_ethereum_block_number = 5;
    uint64 to_ethereum_block_number = 6; // 0 for recent
}

message EthereumFilterLogsOutput {
    repeated EthereumEventData event = 1; //note: ordered by {block,log_index}
}

message EthereumEventData {
    bytes ethereum_abi_packed_outputs = 1;
    uint64 ethereum_block_number = 2;
    uint32 ethereum_txindex = 3;
    uint32 ethereum_logindex = 4;
    uint32 ethereum_txhash = 5;
}