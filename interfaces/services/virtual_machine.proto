syntax = "proto3";
package services;
option go_package = "github.com/orbs-network/orbs-spec/types/go/services";

import "protocol/results.proto";
import "primitives/protocol.proto";
import "protocol/transactions.proto";
import "protocol/queries.proto";
import "protocol/contracts.proto";
import "services/handlers/contract_sdk_call.proto";

option serialize_messages = false;

// relies on Processor, CrosschainConnector, StateStorage
service VirtualMachine {
    // implements interfaces for handling callbacks from other services
    option implement_handler = "handlers.ContractSdkCallHandler";

    // called by ConsensusContext
    rpc ProcessTransactionSet (ProcessTransactionSetInput) returns (ProcessTransactionSetOutput); // Transactions Streaming
    rpc CallSystemContract (CallSystemContractInput) returns (CallSystemContractOutput); // also called by CrosschainAPI

    // called by PublicApi
    rpc ProcessQuery (ProcessQueryInput) returns (ProcessQueryOutput);

    // called by TransactionPool
    rpc TransactionSetPreOrder (TransactionSetPreOrderInput) returns (TransactionSetPreOrderOutput); // Transactions Streaming
}

message ProcessTransactionSetInput {
    primitives.block_height current_block_height = 1;
    primitives.timestamp_nano current_block_timestamp = 2;
    repeated protocol.SignedTransaction signed_transactions = 3;
    primitives.node_address block_proposer_address = 4;
    protocol.ExecutionMode execution_mode = 5;

}

message ProcessTransactionSetOutput {
    repeated protocol.TransactionReceipt transaction_receipts = 1;
    repeated protocol.ContractStateDiff contract_state_diffs = 2;
}

message ProcessQueryInput {
    primitives.block_height block_height = 1; // block_height = 0, indicates using a recent block height (best effort latest)
    protocol.SignedQuery signed_query = 2;
}

message ProcessQueryOutput {
    protocol.ExecutionResult call_result = 1;
    primitives.packed_argument_array output_argument_array = 2;
    primitives.packed_events_array output_events_array = 3;
    primitives.block_height reference_block_height = 4;
    primitives.timestamp_nano reference_block_timestamp = 5;
}

message TransactionSetPreOrderInput {
    primitives.block_height current_block_height = 1;
    primitives.timestamp_nano current_block_timestamp = 2;
    repeated protocol.SignedTransaction signed_transactions = 3;
}

// returns error string if one of the transactions does not pass pre order checks
message TransactionSetPreOrderOutput {
    repeated protocol.TransactionStatus pre_order_results = 1;
}

message CallSystemContractInput {
    primitives.block_height block_height = 1;
    primitives.timestamp_nano block_timestamp = 2;
    primitives.contract_name contract_name = 3;
    primitives.method_name method_name = 4;
    protocol.ArgumentArray input_argument_array = 5;
}

message CallSystemContractOutput {
    protocol.ArgumentArray output_argument_array = 1;
    protocol.ExecutionResult call_result = 2;
}