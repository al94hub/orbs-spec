syntax = "proto3";
package services;
option go_package = "github.com/orbs-network/orbs-spec/types/go/services";

import "primitives/crypto.proto";
import "primitives/protocol.proto";
import "protocol/results.proto";
import "protocol/blocks.proto";

option serialize_messages = false;

// relies on TransactionPool, VirtualMachine, StateStorage
service ConsensusContext {
    // called by ConsensusAlgo
    rpc RequestNewTransactionsBlock (RequestNewTransactionsBlockInput) returns (RequestNewTransactionsBlockOutput);
    rpc RequestNewResultsBlock (RequestNewResultsBlockInput) returns (RequestNewResultsBlockOutput);
    rpc ValidateTransactionsBlock (ValidateTransactionsBlockInput) returns (ValidateTransactionsBlockOutput);
    rpc ValidateResultsBlock (ValidateResultsBlockInput) returns (ValidateResultsBlockOutput);
    rpc RequestOrderingCommittee (RequestCommitteeInput) returns (RequestCommitteeOutput);
    rpc RequestValidationCommittee (RequestCommitteeInput) returns (RequestCommitteeOutput);
}

message RequestNewTransactionsBlockInput {
    primitives.block_height block_height = 1;
    uint32 max_block_size_kb = 2;
    uint32 max_number_of_transactions = 3;
    primitives.sha256 prev_block_hash = 4;
    primitives.timestamp_nano prev_block_timestamp = 5;
}

// returns error code on failure
message RequestNewTransactionsBlockOutput {
    protocol.TransactionsBlockContainer transactions_block = 1;
}

message RequestNewResultsBlockInput {
    primitives.block_height block_height = 1;
    primitives.sha256 prev_block_hash = 2;
    // TODO: when moving to micro-services, stop sending the transactions because expensive and unneeded
    protocol.TransactionsBlockContainer transactions_block = 3;
    primitives.timestamp_nano prev_block_timestamp = 4;
}

// returns error code on failure
message RequestNewResultsBlockOutput {
    protocol.ResultsBlockContainer results_block = 1;
}

message ValidateTransactionsBlockInput {
    primitives.block_height block_height = 1;
    protocol.TransactionsBlockContainer transactions_block = 2;
    primitives.sha256 prev_block_hash = 3;
    primitives.timestamp_nano prev_block_timestamp = 4;
}

// returns error code on failure
message ValidateTransactionsBlockOutput {
}

message ValidateResultsBlockInput {
    primitives.block_height block_height = 1;
    protocol.ResultsBlockContainer results_block = 2;
    primitives.sha256 prev_block_hash = 3;
    // TODO: when moving to micro-services, stop sending the transactions because expensive and unneeded
    protocol.TransactionsBlockContainer transactions_block = 4;
    primitives.timestamp_nano prev_block_timestamp = 5;
}

// returns error code on failure
message ValidateResultsBlockOutput {
}

message RequestCommitteeInput {
    primitives.block_height block_height = 1;
    uint64 random_seed = 2;
    uint32 max_committee_size = 3;
}

// returns error code on failure
message RequestCommitteeOutput {
    repeated primitives.ed25519_public_key node_public_keys = 1;
    repeated primitives.bls1_public_key node_random_seed_public_keys = 2;

}